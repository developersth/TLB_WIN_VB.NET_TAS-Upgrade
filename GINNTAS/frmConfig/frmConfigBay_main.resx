<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="UcBack1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AAAASUVORK5CYII=
</value>
  </data>
  <metadata name="Column1.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Column2.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Column3.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Column4.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Column5.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Column8.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Column6.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Column7.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
</root>