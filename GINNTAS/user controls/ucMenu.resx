<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="PictureBox1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AAAASUVORK5CYII=
</value>
  </data>
</root>